<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnimatedAnime" xml:space="preserve">
    <value>Animación y anime</value>
  </data>
  <data name="AnimatedAnime_Description" xml:space="preserve">
    <value>Incluye dibujos animados, series animadas y anime japonés.</value>
  </data>
  <data name="CookingFood" xml:space="preserve">
    <value>Cocina y comida</value>
  </data>
  <data name="CookingFood_Description" xml:space="preserve">
    <value>Programas centrados en la cocina, la repostería y la cultura alimentaria (por ejemplo, concursos de cocina, documentales gastronómicos)</value>
  </data>
  <data name="DocumentaryReality" xml:space="preserve">
    <value>Documental y Reality</value>
  </data>
  <data name="DocumentaryReality_Description" xml:space="preserve">
    <value>Historias y situaciones de la vida real, ya sean informativas o entretenidas (por ejemplo, documentales sobre la naturaleza, reality shows)</value>
  </data>
  <data name="EducationalScience" xml:space="preserve">
    <value>Educativo y científico</value>
  </data>
  <data name="EducationalScience_Description" xml:space="preserve">
    <value>Programas centrados en temas de aprendizaje y ciencia, a menudo informativos (por ejemplo, programas científicos, programas instructivos)</value>
  </data>
  <data name="GameShowsCompetitions" xml:space="preserve">
    <value>Concursos y concursos</value>
  </data>
  <data name="GameShowsCompetitions_Description" xml:space="preserve">
    <value>Programas en los que los concursantes compiten por premios o reconocimiento (por ejemplo, programas de trivia, concursos de talentos)</value>
  </data>
  <data name="KidsFamily" xml:space="preserve">
    <value>Niños y familia</value>
  </data>
  <data name="KidsFamily_Description" xml:space="preserve">
    <value>Programación adecuada para niños y familias (por ejemplo, programas infantiles, series para toda la familia)</value>
  </data>
  <data name="LifestyleHome" xml:space="preserve">
    <value>Estilo de vida y hogar</value>
  </data>
  <data name="LifestyleHome_Description" xml:space="preserve">
    <value>Programas que exploran temas de estilo de vida, incluidos el diseño, los viajes y el bienestar (por ejemplo, programas de mejoras para el hogar y de viajes).</value>
  </data>
  <data name="MusicPerformances" xml:space="preserve">
    <value>Música y actuaciones</value>
  </data>
  <data name="MusicPerformances_Description" xml:space="preserve">
    <value>Programas centrados en la música, presentaciones en vivo y videos musicales (por ejemplo, cuentas regresivas de música, especiales de conciertos)</value>
  </data>
  <data name="NewsCurrentAffairs" xml:space="preserve">
    <value>Noticias y actualidad</value>
  </data>
  <data name="NewsCurrentAffairs_Description" xml:space="preserve">
    <value>Informes de noticias, programas de entrevistas y análisis en profundidad de acontecimientos actuales.</value>
  </data>
  <data name="SoapOperasDramas" xml:space="preserve">
    <value>Telenovelas y dramas</value>
  </data>
  <data name="SoapOperasDramas_Description" xml:space="preserve">
    <value>Dramas serializados con tramas continuas, a menudo emocionalmente intensas (por ejemplo, telenovelas diurnas, dramas familiares)</value>
  </data>
  <data name="SportsOutdoors" xml:space="preserve">
    <value>Deportes y actividades al aire libre</value>
  </data>
  <data name="SportsOutdoors_Description" xml:space="preserve">
    <value>Programas centrados en eventos deportivos, comentarios y actividades al aire libre (por ejemplo, deportes en vivo, deportes extremos)</value>
  </data>
  <data name="TalkShowsInterviews" xml:space="preserve">
    <value>Programas de entrevistas y entrevistas</value>
  </data>
  <data name="TalkShowsInterviews_Description" xml:space="preserve">
    <value>Programas en los que los presentadores conversan con los invitados sobre diversos temas (por ejemplo, entrevistas con celebridades, paneles de debate)</value>
  </data>
  <data name="VarietyComedy" xml:space="preserve">
    <value>Variedad y comedia</value>
  </data>
  <data name="VarietyComedy_Description" xml:space="preserve">
    <value>Espectáculos con una mezcla de elementos de entretenimiento, como sketches, monólogos y actos de comedia (por ejemplo, programas nocturnos, comedia de sketches)</value>
  </data>
</root>