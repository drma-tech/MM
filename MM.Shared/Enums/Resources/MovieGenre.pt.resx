<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionAdventure" xml:space="preserve">
    <value>Ação e aventura</value>
  </data>
  <data name="ActionAdventure_Description" xml:space="preserve">
    <value>Filmes de alta energia com sequências emocionantes e temas frequentemente heróicos (por exemplo, ação, thrillers de espionagem, sobrevivência)</value>
  </data>
  <data name="Animation" xml:space="preserve">
    <value>Animação</value>
  </data>
  <data name="Animation_Description" xml:space="preserve">
    <value>Filmes que usam técnicas de animação para contar histórias, apelando a todas as idades (por exemplo, animação familiar, anime, CGI)</value>
  </data>
  <data name="Comedy" xml:space="preserve">
    <value>Comédia</value>
  </data>
  <data name="Comedy_Description" xml:space="preserve">
    <value>Filmes leves, com o objetivo de entreter e divertir com humor (por exemplo, comédia romântica, pastelão, comédia de humor negro)</value>
  </data>
  <data name="Documentary" xml:space="preserve">
    <value>Documentário</value>
  </data>
  <data name="Documentary_Description" xml:space="preserve">
    <value>Filmes de não ficção que apresentam eventos, pessoas ou questões reais de forma informativa (por exemplo, documentários sobre a natureza, crimes reais, exploração cultural)</value>
  </data>
  <data name="Drama" xml:space="preserve">
    <value>Drama</value>
  </data>
  <data name="Drama_Description" xml:space="preserve">
    <value>Filmes com foco emocional que exploram personagens complexos e situações da vida real (por exemplo, drama familiar, questões sociais, drama histórico)</value>
  </data>
  <data name="ExperimentalAvantGarde" xml:space="preserve">
    <value>Experimental e de vanguarda</value>
  </data>
  <data name="ExperimentalAvantGarde_Description" xml:space="preserve">
    <value>Filmes não tradicionais que ultrapassam os limites da narrativa e da forma (por exemplo, surrealismo, cinema abstrato, filmes de arte)</value>
  </data>
  <data name="FamilyKids" xml:space="preserve">
    <value>Família e crianças</value>
  </data>
  <data name="FamilyKids_Description" xml:space="preserve">
    <value>Filmes destinados a públicos mais jovens ou adequados para visualização em família (por exemplo, aventura para toda a família, filmes de animação infantis)</value>
  </data>
  <data name="FantasyMythology" xml:space="preserve">
    <value>Fantasia e Mitologia</value>
  </data>
  <data name="FantasyMythology_Description" xml:space="preserve">
    <value>Filmes que apresentam mundos mágicos, criaturas míticas e elementos sobrenaturais (por exemplo, fantasia épica, contos de fadas, fantasia urbana)</value>
  </data>
  <data name="HistoricalBiographical" xml:space="preserve">
    <value>Histórico e Biográfico</value>
  </data>
  <data name="HistoricalBiographical_Description" xml:space="preserve">
    <value>Filmes baseados em eventos reais, períodos históricos ou figuras significativas (por exemplo, biografias, dramas de guerra, épicos históricos)</value>
  </data>
  <data name="HorrorThriller" xml:space="preserve">
    <value>Terror e Suspense</value>
  </data>
  <data name="HorrorThriller_Description" xml:space="preserve">
    <value>Filmes de tensão projetados para provocar medo ou suspense (por exemplo, terror psicológico, suspense sobrenatural, terror de terror)</value>
  </data>
  <data name="MusicalDance" xml:space="preserve">
    <value>Musical e dança</value>
  </data>
  <data name="MusicalDance_Description" xml:space="preserve">
    <value>Filmes onde a música e a dança são centrais para a narrativa (por exemplo, musicais, filmes de dança, óperas rock)</value>
  </data>
  <data name="MysteryCrime" xml:space="preserve">
    <value>Mistério e Crime</value>
  </data>
  <data name="MysteryCrime_Description" xml:space="preserve">
    <value>Filmes focados em resolver quebra-cabeças, geralmente envolvendo crimes ou investigações (por exemplo, histórias de detetive, histórias de detetive, assaltos)</value>
  </data>
  <data name="Romance" xml:space="preserve">
    <value>Romance</value>
  </data>
  <data name="Romance_Description" xml:space="preserve">
    <value>Histórias centradas em relacionamentos românticos e conexões emocionais (por exemplo, drama romântico, comédia romântica, romance de época)</value>
  </data>
  <data name="ScienceFiction" xml:space="preserve">
    <value>Ficção científica</value>
  </data>
  <data name="ScienceFiction_Description" xml:space="preserve">
    <value>Filmes que exploram conceitos futuristas, tecnologia ou vida alienígena (por exemplo, ópera espacial, distopia, viagem no tempo)</value>
  </data>
  <data name="Western" xml:space="preserve">
    <value>Western</value>
  </data>
  <data name="Western_Description" xml:space="preserve">
    <value>Filmes ambientados na fronteira americana, muitas vezes explorando temas de justiça e sobrevivência (por exemplo, faroestes clássicos, faroestes revisionistas)</value>
  </data>
</root>