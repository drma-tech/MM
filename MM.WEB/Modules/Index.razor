@page "/"
@page "/index"

@inherits PageCore<Index>

@inject IJSRuntime JsRuntime

<SeoHeader Title="Home" Description="@SeoTranslations.Description" Url="/"></SeoHeader>

<CardDeck Margin="Margin.Is3.FromBottom">
    <Card>
        <CardBody>
            <CardTitle Size="5" Margin="Margin.Is0.FromBottom">
                Countries <Badge Color="Color.Primary" Float="Float.End">0</Badge>
            </CardTitle>
        </CardBody>
    </Card>
    <Card>
        <CardBody>
            <CardTitle Size="5" Margin="Margin.Is0.FromBottom">
                Cities <Badge Color="Color.Primary" Float="Float.End">0</Badge>
            </CardTitle>
        </CardBody>
    </Card>
    <Card>
        <CardBody>
            <CardTitle Size="5" Margin="Margin.Is0.FromBottom">
                Users <Badge Color="Color.Primary" Float="Float.End">0</Badge>
            </CardTitle>
        </CardBody>
    </Card>
    <Card>
        <CardBody>
            <CardTitle Size="5" Margin="Margin.Is0.FromBottom">
                Couples <Badge Color="Color.Primary" Float="Float.End">0</Badge>
            </CardTitle>
        </CardBody>
    </Card>
</CardDeck>


@code {
    [Parameter][SupplyParameterFromQuery(Name = "language")] public string? language { get; set; }
    [Parameter][SupplyParameterFromQuery(Name = "platform")] public string? platform { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (platform.NotEmpty())
        {
            await JsRuntime.InvokeAsync<string>("SetLocalStorage", "platform", platform);
        }
        else
        {
            await JsRuntime.InvokeAsync<string>("TryDetectPlatform");
        }
    }
}
