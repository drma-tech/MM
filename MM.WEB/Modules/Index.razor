@page "/"
@page "/index"
@using MM.Shared.Models.Dashboard
<SeoHeader Title="Home" Description="@SeoTranslations.Description" Url="/"></SeoHeader>
@inherits PageCore<Index>

@inject IJSRuntime JsRuntime
@inject DashboardApi DashboardApi

<Row>
    <Column>
        <Card>
            <CardBody>
                <Div Background="Background.Primary" Float="Float.Start" Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded" Margin="Margin.Is2.FromEnd"
                Flex="Flex.AlignItems.Center.JustifyContent.Center" TextColor="TextColor.White">
                    <Blazorise.Icon Name="@FontAwesomeIcons.Earth" IconSize="IconSize.Large"></Blazorise.Icon>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextTransform="TextTransform.Uppercase" TextColor="TextColor.Muted">
                        Countries
                    </Span>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextSize="TextSize.Heading3" TextColor="TextColor.Dark">
                        @(SumUsers?.Countries ?? 0)
                    </Span>
                </Div>
            </CardBody>
        </Card>
    </Column>
    <Column>
        <Card>
            <CardBody>
                <Div Background="Background.Primary" Float="Float.Start" Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded" Margin="Margin.Is2.FromEnd"
                Flex="Flex.AlignItems.Center.JustifyContent.Center" TextColor="TextColor.White">
                    <Blazorise.Icon Name="@FontAwesomeIcons.City" IconSize="IconSize.Large"></Blazorise.Icon>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextTransform="TextTransform.Uppercase" TextColor="TextColor.Muted">
                        Cities
                    </Span>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextSize="TextSize.Heading3" TextColor="TextColor.Dark">
                        @(SumUsers?.Cities ?? 0)
                    </Span>
                </Div>
            </CardBody>
        </Card>
    </Column>
    <Column>
        <Card>
            <CardBody>
                <Div Background="Background.Primary" Float="Float.Start" Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded" Margin="Margin.Is2.FromEnd"
                Flex="Flex.AlignItems.Center.JustifyContent.Center" TextColor="TextColor.White">
                    <Blazorise.Icon Name="@FontAwesomeIcons.Users" IconSize="IconSize.Large"></Blazorise.Icon>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextTransform="TextTransform.Uppercase" TextColor="TextColor.Muted">
                        Users
                    </Span>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextSize="TextSize.Heading3" TextColor="TextColor.Dark">
                        @(SumUsers?.Users ?? 0)
                    </Span>
                </Div>
            </CardBody>
        </Card>
    </Column>
    <Column>
        <Card>
            <CardBody>
                <Div Background="Background.Primary" Float="Float.Start" Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded" Margin="Margin.Is2.FromEnd"
                Flex="Flex.AlignItems.Center.JustifyContent.Center" TextColor="TextColor.White">
                    <Blazorise.Icon Name="@FontAwesomeIcons.Ring" IconSize="IconSize.Large"></Blazorise.Icon>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextTransform="TextTransform.Uppercase" TextColor="TextColor.Muted">
                        Couples
                    </Span>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is2">
                    <Span TextSize="TextSize.Heading3" TextColor="TextColor.Dark">
                        @(SumUsers?.Couples ?? 0)
                    </Span>
                </Div>
            </CardBody>
        </Card>
    </Column>
</Row>


@code {
    [Parameter][SupplyParameterFromQuery(Name = "language")] public string? language { get; set; }
    [Parameter][SupplyParameterFromQuery(Name = "platform")] public string? platform { get; set; }

    public SumUsers? SumUsers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (platform.NotEmpty())
        {
            await JsRuntime.InvokeAsync<string>("SetLocalStorage", "platform", platform);
        }
        else
        {
            await JsRuntime.InvokeAsync<string>("TryDetectPlatform");
        }
    }

    protected override async Task LoadDataRender()
    {
        var cache = await DashboardApi.GetSumUsers(null);
        SumUsers = cache?.Data;
    }
}
