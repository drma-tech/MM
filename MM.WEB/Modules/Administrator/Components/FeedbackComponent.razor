@using Blazorise.DataGrid
@using MM.Shared.Core.Helper
@using MM.Shared.Core.Models
@using MM.Shared.Models.Support
@using MM.WEB.Modules.Administrator.Core
@using MM.WEB.Modules.Auth.Core
@using MM.WEB.Modules.Support.Core
@inherits ComponentCore<FeedbackComponent>
@attribute [Authorize(Roles = "administrator")]

@inject AdministratorApi AdministratorApi
@inject TicketApi TicketApi

<DataGrid TItem="TicketModel" Data="@Tickets" @bind-SelectedRow="@Ticket" Editable="true" Responsive="true" ShowPager="true"
          RowInserted="RowInserted" RowUpdated="RowUpdated" RowRemoved="RowRemoved">
    <DataGridColumns>
        <DataGridCommandColumn NewCommandAllowed="false" EditCommandAllowed="false" DeleteCommandAllowed="false" CancelCommandAllowed>
            <SaveCommandTemplate>
                <Button ElementId="btnSave" Type="ButtonType.Submit" PreventDefaultOnSubmit Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </SaveCommandTemplate>
            <CancelCommandTemplate>
                <Button ElementId="btnCancel" Color="Color.Secondary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </CancelCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn Field="@nameof(TicketModel.Title)" Caption="Title" Editable="true" />
        <DataGridColumn Field="@nameof(TicketModel.Description)" Caption="Description" Editable="true" />
        <DataGridSelectColumn Field="@nameof(TicketModel.TicketType)" Data="EnumHelper.GetList<TicketType>()"
                              ValueField="(x) => ((EnumObject)x).Value" TextField="(x) => ((EnumObject)x).Name" Caption="Type" Editable="true" />
        <DataGridSelectColumn Field="@nameof(TicketModel.TicketStatus)" Data="EnumHelper.GetList<TicketStatus>()"
                              ValueField="(x) => ((EnumObject)x).Value" TextField="(x) => ((EnumObject)x).Name" Caption="Status" Editable="true" />
    </DataGridColumns>
    <ButtonRowTemplate>
        <Button Color="Color.Success" Clicked="context.NewCommand.Clicked">New</Button>
        <Button Color="Color.Primary" Disabled="(Ticket is null)" Clicked="context.EditCommand.Clicked">Edit</Button>
        <Button Color="Color.Danger" Disabled="(Ticket is null)" Clicked="context.DeleteCommand.Clicked">Delete</Button>
        <Button Color="Color.Link" Clicked="context.ClearFilterCommand.Clicked">Clear Filter</Button>
    </ButtonRowTemplate>
</DataGrid>

@code {
    HashSet<TicketModel> Tickets = [];
    TicketModel? Ticket;

    protected override async Task LoadDataRender()
    {
        Tickets = await TicketApi.GetAll(null);
    }

    private async Task RowInserted(SavedRowItem<TicketModel, Dictionary<string, object>> e)
    {
        var model = e.NewItem;

        // model.Initialize();

        await TicketApi.Insert(model);
    }

    private async Task RowUpdated(SavedRowItem<TicketModel, Dictionary<string, object>> e)
    {
        // await TicketApi.Add(e.NewItem);
    }

    private async Task RowRemoved(TicketModel model)
    {
        // await TicketApi.Delete(model);
    }
}
