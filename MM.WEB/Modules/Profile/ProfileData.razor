@page "/profile/data"
@using FluentValidation
@using FluentValidation.Results
@using MM.Shared.Models.Profile;
@using MM.Shared.Models.Profile.Core
@using MM.WEB.Modules.Profile.Components
@using MM.WEB.Modules.Profile.Core
@using MM.WEB.Modules.Shared.Popup;
@attribute [Authorize]
@inherits PageCore<ProfileData>

<RenderControl Core="Core" Model="Profile" ExpressionEmpty="((ProfileModel? obj)=> obj == null)" PrivateContent="true">
    <Tabs RenderMode="TabsRenderMode.LazyReload" @bind-SelectedTab="@Tab" FullWidth="true">
        <Items>
            <Tab Name="BASIC">
                @MM.Shared.Enums.Resources.Section.Basic
                @if (IsValid(Tabs.BASIC))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="BIO">
                @MM.Shared.Enums.Resources.Section.Bio
                @if (IsValid(Tabs.BIO))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="LIFESTYLE">
                @MM.Shared.Enums.Resources.Section.Lifestyle
                @if (IsValid(Tabs.LIFESTYLE))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="PERSONALITY">
                @MM.Shared.Enums.Resources.Section.Personality
                @if (IsValid(Tabs.PERSONALITY))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="INTEREST">
                @MM.Shared.Enums.Resources.Section.Interest
                @if (IsValid(Tabs.INTEREST))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="RELATIONSHIP">
                @MM.Shared.Enums.Resources.Section.Relationship
                @if (IsValid(Tabs.RELATIONSHIP))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
            <Tab Name="GOAL">
                @MM.Shared.Enums.Resources.Section.Goals
                @if (IsValid(Tabs.GOAL))
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.CircleCheck" Margin="Margin.Is2.FromStart" TextColor="TextColor.Success"></Blazorise.Icon>
                }
                else
                {
                    <Blazorise.Icon Name="FontAwesomeIcons.QuestionCircle" Margin="Margin.Is2.FromStart" TextColor="TextColor.Warning"></Blazorise.Icon>
                }
            </Tab>
        </Items>
        <Content>
            <TabPanel Name="BASIC" Padding="Padding.Is3.FromTop">
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldText For="@(() => Profile!.NickName)" @bind-Value="@Profile!.NickName" CssIcon="@FontAwesomeIcons.User" Required="true" LabelSize="LabelSize.Short"></FieldText>
                        <FieldText For="@(() => Profile.Description)" @bind-Value="@Profile.Description" CssIcon="@FontAwesomeIcons.QuoteLeft"
                                   Rows="7" LabelSize="LabelSize.Short"></FieldText>
                        <Country For="@(() => Profile.Nationality)" SelectedValue="@Profile.Nationality" SelectedValueChanged="CountryChanged"
                                 CssIcon="@FontAwesomeIcons.EarthAmericas" Required="true" LabelSize="LabelSize.Short"></Country>
                        <FieldText For="@(() => Profile.Location)" Value="@Profile.Location" CssIcon="@FontAwesomeIcons.MapMarkerAlt" Required="true" Disabled="true"
                                   ButtomClicked="async ()=> { await SetLocation(Profile); }" ButtomCssIcon="@FontAwesomeIcons.MapMarkedAlt" LabelSize="LabelSize.Short"
                                   ButtomTitle="Retrieve GPS position"></FieldText>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.Languages)" TValue="HashSet<Language>" TEnum="Language" @bind-SelectedValues="@Profile!.Languages"
                                     CssIcon="@FontAwesomeIcons.Language" Required="true" Multiple="true" Order="@(o=>o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.MaritalStatus)" TValue="MaritalStatus?" TEnum="MaritalStatus" @bind-SelectedValue="@Profile.MaritalStatus"
                                     CssIcon="@FontAwesomeIcons.Ring" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.BiologicalSex)" TValue="BiologicalSex?" TEnum="BiologicalSex" @bind-SelectedValue="@Profile.BiologicalSex"
                                     CssIcon="@FontAwesomeIcons.PersonHalfDress" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.GenderIdentities)" TValue="HashSet<GenderIdentity>" TEnum="GenderIdentity" @bind-SelectedValues="@Profile.GenderIdentities"
                                     CssIcon="@FontAwesomeIcons.MarsAndVenus" Required="true" Multiple="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.SexualOrientations)" TValue="HashSet<SexualOrientation>" TEnum="SexualOrientation" @bind-SelectedValues="@Profile.SexualOrientations"
                                     CssIcon="@FontAwesomeIcons.HeartPulse" Required="true" Multiple="true"></FieldSelect>
                    </Column>
                </Row>
            </TabPanel>
            <TabPanel Name="BIO" Padding="Padding.Is3.FromTop">
                <Alert Visible="true" Color="Color.Info">
                    <AlertDescription>@WEB.Resources.GlobalTranslations.ProfileDataBioTip1</AlertDescription>
                </Alert>
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.Ethnicity)" TValue="Ethnicity?" TEnum="Ethnicity" @bind-SelectedValue="@Profile!.Ethnicity"
                                     CssIcon="@FontAwesomeIcons.Globe" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.BodyType)" TValue="BodyType?" TEnum="BodyType" @bind-SelectedValue="@Profile.BodyType"
                                     CssIcon="@FontAwesomeIcons.Weight" Required="true" ShowHelper="false"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <Birthdate Type="FieldType.Date" For="@(() => Profile!.BirthDate)" @bind-Value="@Profile!.BirthDate"
                                   CssIcon="@FontAwesomeIcons.BirthdayCake" Required="true"></Birthdate>
                        <FieldSelect For="@(() => Profile.Height)" TValue="MM.Shared.Enums.Height?" TEnum="MM.Shared.Enums.Height" @bind-SelectedValue="@Profile.Height"
                                     CssIcon="@FontAwesomeIcons.Ruler" Required="true" ShowHelper="false"></FieldSelect>
                    </Column>
                </Row>
                <Card>
                    <CardHeader>
                        @WEB.Resources.CardHeader.ProfileOptionalSection
                    </CardHeader>
                    <CardBody>
                        <Alert Visible="true" Color="Color.Info">
                            <AlertDescription>@WEB.Resources.GlobalTranslations.ProfileDataBioTip2</AlertDescription>
                        </Alert>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                <FieldSelect For="@(() => Profile!.Neurodiversity)" TValue="Neurodiversity?" TEnum="Neurodiversity" @bind-SelectedValue="@Profile!.Neurodiversity"
                                             CssIcon="@FontAwesomeIcons.Brain"></FieldSelect>
                            </Column>
                            <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                <FieldSelect For="@(() => Profile!.Disabilities)" TValue="HashSet<Disability>" TEnum="Disability" @bind-SelectedValues="@Profile!.Disabilities"
                                             CssIcon="@FontAwesomeIcons.Wheelchair" Multiple="true"></FieldSelect>
                            </Column>
                        </Row>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="LIFESTYLE" Padding="Padding.Is3.FromTop">
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.Drink)" TValue="Drink?" TEnum="Drink" @bind-SelectedValue="@Profile!.Drink"
                                     CssIcon="@FontAwesomeIcons.GlassCheers" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.Smoke)" TValue="Smoke?" TEnum="Smoke" @bind-SelectedValue="@Profile.Smoke"
                                     CssIcon="@FontAwesomeIcons.Smoking" ShowHelper="false" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.Diet)" TValue="Diet?" TEnum="Diet" @bind-SelectedValue="@Profile.Diet"
                                     CssIcon="@FontAwesomeIcons.Utensils" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.Religion)" TValue="Religion?" TEnum="Religion" @bind-SelectedValue="@Profile.Religion"
                                     CssIcon="@FontAwesomeIcons.PrayingHands" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.FamilyInvolvement)" TValue="FamilyInvolvement?" TEnum="FamilyInvolvement" @bind-SelectedValue="@Profile.FamilyInvolvement"
                                     CssIcon="@FontAwesomeIcons.PeopleRoof" Required="true"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.HaveChildren)" TValue="HaveChildren?" TEnum="HaveChildren" @bind-SelectedValue="@Profile!.HaveChildren"
                                     CssIcon="@FontAwesomeIcons.Child" ShowHelper="false" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.HavePets)" TValue="HavePets?" TEnum="HavePets" @bind-SelectedValue="@Profile!.HavePets"
                                     CssIcon="@FontAwesomeIcons.Paw" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.EducationLevel)" TValue="EducationLevel?" TEnum="EducationLevel" @bind-SelectedValue="@Profile.EducationLevel"
                                     CssIcon="@FontAwesomeIcons.GraduationCap" ShowHelper="true" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.CareerCluster)" TValue="CareerCluster?" TEnum="CareerCluster" @bind-SelectedValue="@Profile.CareerCluster"
                                     CssIcon="@FontAwesomeIcons.Briefcase" ShowGroup="true" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.LivingSituation)" TValue="LivingSituation?" TEnum="LivingSituation" @bind-SelectedValue="@Profile.LivingSituation"
                                     CssIcon="@FontAwesomeIcons.HomeUser" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile.TravelFrequency)" TValue="TravelFrequency?" TEnum="TravelFrequency" @bind-SelectedValue="@Profile.TravelFrequency"
                                     CssIcon="@FontAwesomeIcons.Plane" Required="true"></FieldSelect>
                    </Column>
                </Row>
                <Card>
                    <CardHeader>
                        @WEB.Resources.CardHeader.ProfileOptionalSection
                    </CardHeader>
                    <CardBody>
                        <Alert Visible="true" Color="Color.Info">
                            <AlertDescription>Due to the sensitive nature of this information, it will only be visible to candidates after the match is made.</AlertDescription>
                        </Alert>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                <FieldSelect For="@(() => Profile!.NetWorth)" TValue="NetWorth?" TEnum="NetWorth" @bind-SelectedValue="@Profile!.NetWorth"
                                             CssIcon="@FontAwesomeIcons.Gem" ShowHelper="false"
                                             ButtomClicked="@(()=>{})" ButtomTitle="Check" ButtomCssIcon="@FontAwesomeIcons.CheckCircle" ButtomDisabled="true"></FieldSelect>
                            </Column>
                            <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                <FieldSelect For="@(() => Profile!.AnnualIncome)" TValue="AnnualIncome?" TEnum="AnnualIncome" @bind-SelectedValue="@Profile!.AnnualIncome"
                                             CssIcon="@FontAwesomeIcons.MoneyBill" ShowHelper="false"
                                             ButtomClicked="@(()=>{})" ButtomTitle="Check" ButtomCssIcon="@FontAwesomeIcons.CheckCircle" ButtomDisabled="true"></FieldSelect>
                            </Column>
                        </Row>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="PERSONALITY" Padding="Padding.Is3.FromTop">
                <Alert Visible="true" Color="Color.Info">
                    <AlertDescription>@WEB.Resources.GlobalTranslations.ProfileDataPersonTip1</AlertDescription>
                </Alert>
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.MoneyPersonality)" TValue="MoneyPersonality?" TEnum="MoneyPersonality" @bind-SelectedValue="@Profile!.MoneyPersonality"
                                     CssIcon="@FontAwesomeIcons.Wallet" LabelSize="LabelSize.Big" HelpLink="https://empower.me/quiz/"></FieldSelect>
                        <FieldSelect For="@(() => Profile.SharedSpendingStyle)" TValue="SharedSpendingStyle?" TEnum="SharedSpendingStyle" @bind-SelectedValue="@Profile.SharedSpendingStyle"
                                     CssIcon="@FontAwesomeIcons.HandHoldingUsd" LabelSize="LabelSize.Big"></FieldSelect>
                        <FieldSelect For="@(() => Profile.RelationshipPersonality)" TValue="RelationshipPersonality?" TEnum="RelationshipPersonality" @bind-SelectedValue="@Profile.RelationshipPersonality"
                                     CssIcon="@FontAwesomeIcons.PeoplePulling" LabelSize="LabelSize.Big" HelpLink="https://theanatomyoflove.com/relationship-quizzes/helen-fishers-personality-test/"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.MBTI)" TValue="MyersBriggsTypeIndicator?" TEnum="MyersBriggsTypeIndicator" @bind-SelectedValue="@Profile!.MBTI"
                                     CssIcon="@FontAwesomeIcons.UserTag" LabelSize="LabelSize.Big" HelpLink="https://www.16personalities.com/" ShowGroup="true"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.LoveLanguage)" TValue="LoveLanguage?" TEnum="LoveLanguage" @bind-SelectedValue="@Profile!.LoveLanguage"
                                     CssIcon="@FontAwesomeIcons.HandHoldingHeart" LabelSize="LabelSize.Big" HelpLink="https://5lovelanguages.com/quizzes/love-language"></FieldSelect>
                        <FieldSelect For="@(() => Profile.SexPersonality)" TValue="SexPersonality?" TEnum="SexPersonality" @bind-SelectedValue="@Profile.SexPersonality"
                                     CssIcon="@FontAwesomeIcons.Heart" LabelSize="LabelSize.Big" HelpLink="https://vmtherapy.com/sex-personality-type"></FieldSelect>
                        <FieldSelect For="@(() => Profile.SexPersonalityPreference)" TValue="HashSet<SexPersonality>" TEnum="SexPersonality" @bind-SelectedValues="@Profile.SexPersonalityPreference"
                                     CssIcon="@FontAwesomeIcons.Heart" LabelSize="LabelSize.Big" Multiple="true"></FieldSelect>
                    </Column>
                </Row>
            </TabPanel>
            <TabPanel Name="INTEREST" Padding="Padding.Is3.FromTop">
                <Alert Visible="true" Color="Color.Info">
                    <AlertDescription>@WEB.Resources.CardHeader.Maximum3Items</AlertDescription>
                </Alert>
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.Food)" TValue="HashSet<Food>" TEnum="Food" @bind-SelectedValues="@Profile!.Food"
                                     CssIcon="@FontAwesomeIcons.PizzaSlice" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.Vacation)" TValue="HashSet<Vacation>" TEnum="Vacation" @bind-SelectedValues="@Profile.Vacation"
                                     CssIcon="@FontAwesomeIcons.PlaneDeparture" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.Sports)" TValue="HashSet<Sports>" TEnum="Sports" @bind-SelectedValues="@Profile.Sports"
                                     CssIcon="@FontAwesomeIcons.Swimmer" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.LeisureActivities)" TValue="HashSet<LeisureActivities>" TEnum="LeisureActivities" @bind-SelectedValues="@Profile.LeisureActivities"
                                     CssIcon="@FontAwesomeIcons.UmbrellaBeach" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.MusicGenre)" TValue="HashSet<MusicGenre>" TEnum="MusicGenre" @bind-SelectedValues="@Profile!.MusicGenre"
                                     CssIcon="@FontAwesomeIcons.Music" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.MovieGenre)" TValue="HashSet<MovieGenre>" TEnum="MovieGenre" @bind-SelectedValues="@Profile.MovieGenre"
                                     CssIcon="@FontAwesomeIcons.Film" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.TVGenre)" TValue="HashSet<TVGenre>" TEnum="TVGenre" @bind-SelectedValues="@Profile.TVGenre"
                                     CssIcon="@FontAwesomeIcons.Tv" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                        <FieldSelect For="@(() => Profile.ReadingGenre)" TValue="HashSet<ReadingGenre>" TEnum="ReadingGenre" @bind-SelectedValues="@Profile.ReadingGenre"
                                     CssIcon="@FontAwesomeIcons.BookReader" LabelSize="LabelSize.Short" Multiple="true" Order="(o => o.Name)"></FieldSelect>
                    </Column>
                </Row>
            </TabPanel>
            <TabPanel Name="RELATIONSHIP" Padding="Padding.Is3.FromTop">
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.SharedFinances)" TValue="SharedFinances?" TEnum="SharedFinances" @bind-SelectedValue="@Profile!.SharedFinances"
                                     CssIcon="@FontAwesomeIcons.MoneyBillTransfer" Required="true" LabelSize="LabelSize.Big"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.ConflictResolutionStyle)" TValue="ConflictResolutionStyle?" TEnum="ConflictResolutionStyle" @bind-SelectedValue="@Profile!.ConflictResolutionStyle"
                                     CssIcon="@FontAwesomeIcons.Handshake" Required="true" LabelSize="LabelSize.Big"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.HouseholdManagement)" TValue="HouseholdManagement?" TEnum="HouseholdManagement" @bind-SelectedValue="@Profile!.HouseholdManagement"
                                     CssIcon="@FontAwesomeIcons.Broom" Required="true" LabelSize="LabelSize.Big"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.TimeTogetherPreference)" TValue="TimeTogetherPreference?" TEnum="TimeTogetherPreference" @bind-SelectedValue="@Profile!.TimeTogetherPreference"
                                     CssIcon="@FontAwesomeIcons.PeopleArrows" Required="true" LabelSize="LabelSize.Big"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.OppositeSexFriendships)" TValue="OppositeSexFriendships?" TEnum="OppositeSexFriendships" @bind-SelectedValue="@Profile!.OppositeSexFriendships"
                                     CssIcon="@FontAwesomeIcons.Restroom" Required="true" LabelSize="LabelSize.Big"></FieldSelect>
                    </Column>
                </Row>
            </TabPanel>
            <TabPanel Name="GOAL" Padding="Padding.Is3.FromTop">
                <Row>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.RelationshipIntentions)" TValue="HashSet<RelationshipIntention>" TEnum="RelationshipIntention" @bind-SelectedValues="@Profile!.RelationshipIntentions"
                                     CssIcon="@FontAwesomeIcons.Search" Required="true" Multiple="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.Relocation)" TValue="Relocation?" TEnum="Relocation" @bind-SelectedValue="@Profile!.Relocation"
                                     CssIcon="@FontAwesomeIcons.Truck" Required="true"></FieldSelect>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <FieldSelect For="@(() => Profile!.WantChildren)" TValue="WantChildren?" TEnum="WantChildren" @bind-SelectedValue="@Profile!.WantChildren"
                                     CssIcon="@FontAwesomeIcons.Baby" ShowHelper="false" Required="true"></FieldSelect>
                        <FieldSelect For="@(() => Profile!.IdealPlaceToLive)" TValue="IdealPlaceToLive?" TEnum="IdealPlaceToLive" @bind-SelectedValue="@Profile!.IdealPlaceToLive"
                                     CssIcon="@FontAwesomeIcons.HouseCircleCheck" Required="true"></FieldSelect>
                    </Column>
                </Row>
            </TabPanel>
        </Content>
    </Tabs>

    <Button Color="Color.Primary" Margin="Margin.Is2.OnY" Clicked="SaveHandle">
        <Blazorise.Icon Name="FontAwesomeIcons.Save"></Blazorise.Icon> @WEB.Resources.Button.Save
    </Button>
    @if (Profile != null && !Validator.Validate(Profile, options => options.IncludeRuleSets(Tab)).IsValid)
    {
        <Button Color="Color.Secondary" Margin="Margin.Is2.OnY.Is2.FromStart" Clicked="()=>ShowErrors(Profile)">
            <Blazorise.Icon Name="FontAwesomeIcons.Bug"></Blazorise.Icon> Show pending items
        </Button>
    }
    <Div Float="Float.End" Margin="Margin.Is2.OnY">
        <Button Color="Color.Primary" Clicked="help!.ShowModal">
            <Blazorise.Icon Name="FontAwesomeIcons.ExclamationCircle"></Blazorise.Icon> @WEB.Resources.Button.Help
        </Button>
        <Button Color="Color.Danger" Clicked="privacy!.ShowModal">
            <Blazorise.Icon Name="FontAwesomeIcons.UserShield"></Blazorise.Icon> @WEB.Resources.Button.Privacy
        </Button>
    </Div>

    <BasicModal @ref="@privacy" Title="@WEB.Resources.GlobalTranslations.Privacy">
        <ul style="margin-left: -10px;">
            <li>@WEB.Resources.GlobalTranslations.TermTopic1</li>
            <li>@WEB.Resources.GlobalTranslations.TermTopic2 '<a href="@($"/support/terms/{AppStateStatic.GetLanguageCode()}")" target="_blank">@WEB.Resources.GlobalTranslations.TermsOfUse</a>';</li>
        </ul>
    </BasicModal>

    <BasicModal @ref="help" Title="@WEB.Resources.GlobalTranslations.HelpTitle">
        <Paragraph Margin="Margin.Is2.FromBottom" TextAlignment="TextAlignment.Justified">
            <Button Color="Color.Primary" Outline="true"><Blazorise.Icon Name="FontAwesomeIcons.Question"></Blazorise.Icon></Button>
            @WEB.Resources.GlobalTranslations.ProfileHelpQuestion
        </Paragraph>
        <Paragraph Margin="Margin.Is2.FromBottom" TextAlignment="TextAlignment.Justified">
            <Button Color="Color.Primary" Outline="true"><Blazorise.Icon Name="FontAwesomeIcons.Plus"></Blazorise.Icon></Button>
            @WEB.Resources.GlobalTranslations.ProfileHelpPlus
        </Paragraph>
        <Paragraph Margin="Margin.Is2.FromBottom" TextAlignment="TextAlignment.Justified">
            <Button Color="Color.Primary" Outline="true"><Blazorise.Icon Name="FontAwesomeIcons.MapMarkedAlt"></Blazorise.Icon></Button>
            @WEB.Resources.GlobalTranslations.ProfileHelpMap
        </Paragraph>
    </BasicModal>
</RenderControl>

@code {
    private BasicModal? privacy;
    private BasicModal? help;

    public string? Tab { get; set; } = "BASIC";

    private enum Tabs
    {
        BASIC,
        BIO,
        LIFESTYLE,
        PERSONALITY,
        INTEREST,
        RELATIONSHIP,
        GOAL
    }

    private void CountryChanged(MM.Shared.Enums.Country? country)
    {
        if (Profile == null) return;

        Profile.Nationality = country;
        Profile.AddLanguages(country);
    }

    public ProfileValidation Validator { get; set; } = new();

    private bool IsValid(Tabs tab)
    {
        if (Profile == null) return false;

        var result = new ValidationResult();

        switch (tab)
        {
            case Tabs.BASIC:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("BASIC"));
                break;
            case Tabs.BIO:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("BIO"));
                break;
            case Tabs.LIFESTYLE:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("LIFESTYLE"));
                break;
            case Tabs.PERSONALITY:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("PERSONALITY"));
                break;
            case Tabs.INTEREST:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("INTEREST"));
                break;
            case Tabs.GOAL:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("GOAL"));
                break;
            default:
                break;
        }

        return result.IsValid;
    }
}