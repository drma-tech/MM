@page "/profile/data"
@attribute [Authorize]
@using FluentValidation
@using MM.Shared.Enums.Resources
@using MM.Shared.Models.Profile
@using MM.Shared.Models.Profile.Core
@using MM.WEB.Modules.Profile.Core
@using BiologicalSex = MM.Shared.Enums.BiologicalSex
@using Button = MM.WEB.Resources.Button
@using CardHeader = MM.WEB.Resources.CardHeader
@using CareerCluster = MM.Shared.Enums.CareerCluster
@using Country = MM.Shared.Enums.Country
@using Diet = MM.Shared.Enums.Diet
@using Disability = MM.Shared.Enums.Disability
@using Drink = MM.Shared.Enums.Drink
@using HaveChildren = MM.Shared.Enums.HaveChildren
@using Height = MM.Shared.Enums.Height
@using LoveLanguage = MM.Shared.Enums.LoveLanguage
@using MoneyPersonality = MM.Shared.Enums.MoneyPersonality
@using MyersBriggsTypeIndicator = MM.Shared.Enums.MyersBriggsTypeIndicator
@using Neurodiversity = MM.Shared.Enums.Neurodiversity
@using RelationshipPersonality = MM.Shared.Enums.RelationshipPersonality
@using SexPersonality = MM.Shared.Enums.SexPersonality
@using SharedSpendingStyle = MM.Shared.Enums.SharedSpendingStyle
@using Smoke = MM.Shared.Enums.Smoke
@using TravelFrequency = MM.Shared.Enums.TravelFrequency
@using WantChildren = MM.Shared.Enums.WantChildren
@inherits PageCore<ProfileData>

<RenderControl Core="Core" Model="Profile" ExpressionEmpty="(ProfileModel? obj) => obj == null" PrivateContent="true">
    <MudExpansionPanels Elevation="2" Class="mb-3">
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.BASIC)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.BASIC))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Basic</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.BASIC)
                {
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldText For="@(() => Profile!.NickName)" @bind-Value="@Profile!.NickName" CssIcon="@IconsFA.Solid.Icon("user").Font"
                                           Required="true"></FieldText>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldText For="@(() => Profile.Description)" @bind-Value="@Profile.Description" CssIcon="@IconsFA.Solid.Icon("quote-left").Font"
                                           Rows="8">
                                </FieldText>
                            </MudItem>
                            <MudItem xs="12">
                                <Country For="@(() => Profile.Nationality)" SelectedValue="@Profile.Nationality" SelectedValueChanged="CountryChanged"
                                         CssIcon="@IconsFA.Solid.Icon("earth-americas").Font" Required="true">
                                </Country>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldText For="@(() => Profile.Location)" Value="@Profile.Location" CssIcon="@IconsFA.Solid.Icon("location-dot").Font" Required="true" ReadOnly="true"
                                           ButtomClicked="async () => { await SetLocation(Profile); }" ButtomCssIcon="@IconsFA.Solid.Icon("map-location-dot").Font"
                                           ButtomTitle="Retrieve GPS position">
                                </FieldText>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.Languages)" TValue="HashSet<Language>" TEnum="Language" @bind-SelectedValues="@Profile!.Languages"
                                             CssIcon="@IconsFA.Solid.Icon("language").Font" Required="true" Multiple="true" Order="@(o => o.Name)"
                                             ShowDataSelectDescription="false">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.MaritalStatus)" TValue="MaritalStatus?" TEnum="MaritalStatus" @bind-SelectedValue="@Profile.MaritalStatus"
                                             CssIcon="@IconsFA.Solid.Icon("ring").Font" Required="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.BiologicalSex)" TValue="BiologicalSex?" TEnum="BiologicalSex" @bind-SelectedValue="@Profile.BiologicalSex"
                                             CssIcon="@IconsFA.Solid.Icon("person-half-dress").Font" Required="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.GenderIdentities)" TValue="HashSet<GenderIdentity>" TEnum="GenderIdentity" @bind-SelectedValues="@Profile.GenderIdentities"
                                             CssIcon="@IconsFA.Solid.Icon("mars-and-venus").Font" Required="true" Multiple="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.SexualOrientations)" TValue="HashSet<SexualOrientation>" TEnum="SexualOrientation" @bind-SelectedValues="@Profile.SexualOrientations"
                                             CssIcon="@IconsFA.Solid.Icon("heart-pulse").Font" Required="true" Multiple="true">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.BIO)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.BIO))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Bio</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.BIO)
                {
                    <MudAlert Dense="true" Variant="Variant.Outlined" Severity="MudBlazor.Severity.Info" Class="mb-4">
                        @GlobalTranslations.ProfileDataBioTip1
                    </MudAlert>
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs" Class="mb-4">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.Ethnicity)" TValue="Ethnicity?" TEnum="Ethnicity" @bind-SelectedValue="@Profile!.Ethnicity"
                                             CssIcon="@IconsFA.Solid.Icon("globe").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.BodyType)" TValue="BodyType?" TEnum="BodyType" @bind-SelectedValue="@Profile.BodyType"
                                             CssIcon="@IconsFA.Solid.Icon("weight-scale").Font" ShowHelper="false">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <Birthdate Type="Shared.Field.FieldType.Date" For="@(() => Profile!.BirthDate)" @bind-Value="@Profile!.BirthDate"
                                           CssIcon="@IconsFA.Solid.Icon("cake-candles").Font">
                                </Birthdate>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Height)" TValue="Height?" TEnum="Height" @bind-SelectedValue="@Profile.Height"
                                             CssIcon="@IconsFA.Solid.Icon("ruler").Font" ShowHelper="false">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                    <MudStack Spacing="0">
                        <MudButton Color="Color.Warning" Variant="Variant.Outlined" OnClick="@(() => { _BioExpanded = !_BioExpanded; })"
                                   EndIcon="@IconsFA.Solid.Icon("arrow-down").Font" Size="AppStateStatic.Size">
                            @CardHeader.ProfileOptionalSection
                        </MudButton>
                        <MudCollapse Expanded="_BioExpanded">
                            <MudAlert Dense="true" Variant="Variant.Outlined" Severity="MudBlazor.Severity.Info" Class="my-4">
                                @GlobalTranslations.ProfileDataBioTip2
                            </MudAlert>
                            <MudGrid Spacing="4">
                                <MudItem xs="12" sm="6">
                                    <FieldSelect For="@(() => Profile!.Neurodiversity)" TValue="Neurodiversity?" TEnum="Neurodiversity" @bind-SelectedValue="@Profile!.Neurodiversity"
                                                 CssIcon="@IconsFA.Solid.Icon("brain").Font">
                                    </FieldSelect>
                                </MudItem>
                                <MudItem xs="12" sm="6">
                                    <FieldSelect For="@(() => Profile!.Disabilities)" TValue="HashSet<Disability>" TEnum="Disability" @bind-SelectedValues="@Profile!.Disabilities"
                                                 CssIcon="@IconsFA.Solid.Icon("wheelchair").Font" Multiple="true">
                                    </FieldSelect>
                                </MudItem>
                            </MudGrid>
                        </MudCollapse>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.LIFESTYLE)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.LIFESTYLE))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Lifestyle</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.LIFESTYLE)
                {
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs" Class="mb-4">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.Drink)" TValue="Drink?" TEnum="Drink" @bind-SelectedValue="@Profile!.Drink"
                                             CssIcon="@IconsFA.Solid.Icon("champagne-glasses").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Smoke)" TValue="Smoke?" TEnum="Smoke" @bind-SelectedValue="@Profile.Smoke"
                                             CssIcon="@IconsFA.Solid.Icon("smoking").Font" ShowHelper="false">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Diet)" TValue="Diet?" TEnum="Diet" @bind-SelectedValue="@Profile.Diet"
                                             CssIcon="@IconsFA.Solid.Icon("utensils").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Religion)" TValue="Religion?" TEnum="Religion" @bind-SelectedValue="@Profile.Religion"
                                             CssIcon="@IconsFA.Solid.Icon("hands-praying").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.FamilyInvolvement)" TValue="FamilyInvolvement?" TEnum="FamilyInvolvement" @bind-SelectedValue="@Profile.FamilyInvolvement"
                                             CssIcon="@IconsFA.Solid.Icon("people-roof").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.HaveChildren)" TValue="HaveChildren?" TEnum="HaveChildren" @bind-SelectedValue="@Profile!.HaveChildren"
                                             CssIcon="@IconsFA.Solid.Icon("child").Font" ShowHelper="false">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.HavePets)" TValue="HavePets?" TEnum="HavePets" @bind-SelectedValue="@Profile!.HavePets"
                                             CssIcon="@IconsFA.Solid.Icon("paw").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.EducationLevel)" TValue="EducationLevel?" TEnum="EducationLevel" @bind-SelectedValue="@Profile.EducationLevel"
                                             CssIcon="@IconsFA.Solid.Icon("graduation-cap").Font" ShowHelper="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.CareerCluster)" TValue="CareerCluster?" TEnum="CareerCluster" @bind-SelectedValue="@Profile.CareerCluster"
                                             CssIcon="@IconsFA.Solid.Icon("briefcase").Font" ShowGroup="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.LivingSituation)" TValue="LivingSituation?" TEnum="LivingSituation" @bind-SelectedValue="@Profile.LivingSituation"
                                             CssIcon="@IconsFA.Solid.Icon("house-user").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.TravelFrequency)" TValue="TravelFrequency?" TEnum="TravelFrequency" @bind-SelectedValue="@Profile.TravelFrequency"
                                             CssIcon="@IconsFA.Solid.Icon("plane").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                    <MudStack Spacing="0">
                        <MudButton Color="Color.Warning" Variant="Variant.Outlined" OnClick="@(() => { _BioExpanded = !_BioExpanded; })"
                                   EndIcon="@IconsFA.Solid.Icon("arrow-down").Font" Size="AppStateStatic.Size">
                            @CardHeader.ProfileOptionalSection
                        </MudButton>
                        <MudCollapse Expanded="_BioExpanded">
                            <MudAlert Dense="true" Variant="Variant.Outlined" Severity="MudBlazor.Severity.Info" Class="my-4">
                                Due to the sensitive nature of this information, it will only be visible to candidates after the match is made.
                            </MudAlert>
                            <MudGrid Spacing="4">
                                <MudItem xs="12" sm="6">
                                    <FieldSelect For="@(() => Profile!.NetWorth)" TValue="NetWorth?" TEnum="NetWorth" @bind-SelectedValue="@Profile!.NetWorth"
                                                 CssIcon="@IconsFA.Solid.Icon("gem").Font" ShowHelper="false"
                                                 ButtomClicked="@(() => { })" ButtomTitle="Check" ButtomCssIcon="@Icons.Material.Filled.CheckCircle" ButtomDisabled="true">
                                    </FieldSelect>
                                </MudItem>
                                <MudItem xs="12" sm="6">
                                    <FieldSelect For="@(() => Profile!.AnnualIncome)" TValue="AnnualIncome?" TEnum="AnnualIncome" @bind-SelectedValue="@Profile!.AnnualIncome"
                                                 CssIcon="@IconsFA.Solid.Icon("money-bill").Font" ShowHelper="false"
                                                 ButtomClicked="@(() => { })" ButtomTitle="Check" ButtomCssIcon="@Icons.Material.Filled.CheckCircle" ButtomDisabled="true">
                                    </FieldSelect>
                                </MudItem>
                            </MudGrid>
                        </MudCollapse>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.PERSONALITY)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.PERSONALITY))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Personality</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.PERSONALITY)
                {
                    <MudAlert Dense="true" Variant="Variant.Outlined" Severity="MudBlazor.Severity.Info" Class="mb-4">
                        @GlobalTranslations.ProfileDataPersonTip1
                    </MudAlert>
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.MoneyPersonality)" TValue="MoneyPersonality?" TEnum="MoneyPersonality" @bind-SelectedValue="@Profile!.MoneyPersonality"
                                             CssIcon="@IconsFA.Solid.Icon("wallet").Font" HelpLink="https://moneytype.hermoney.com/">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.SharedSpendingStyle)" TValue="SharedSpendingStyle?" TEnum="SharedSpendingStyle" @bind-SelectedValue="@Profile.SharedSpendingStyle"
                                             CssIcon="@IconsFA.Solid.Icon("hand-holding-dollar").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.RelationshipPersonality)" TValue="RelationshipPersonality?" TEnum="RelationshipPersonality" @bind-SelectedValue="@Profile.RelationshipPersonality"
                                             CssIcon="@IconsFA.Solid.Icon("people-pulling").Font" HelpLink="https://theanatomyoflove.com/relationship-quizzes/helen-fishers-personality-test/">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.MBTI)" TValue="MyersBriggsTypeIndicator?" TEnum="MyersBriggsTypeIndicator" @bind-SelectedValue="@Profile!.MBTI"
                                             CssIcon="@IconsFA.Solid.Icon("user-tag").Font" HelpLink="https://www.16personalities.com/" ShowGroup="true">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.LoveLanguage)" TValue="LoveLanguage?" TEnum="LoveLanguage" @bind-SelectedValue="@Profile!.LoveLanguage"
                                             CssIcon="@IconsFA.Solid.Icon("hand-holding-heart").Font" HelpLink="https://5lovelanguages.com/quizzes/love-language">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.SexPersonality)" TValue="SexPersonality?" TEnum="SexPersonality" @bind-SelectedValue="@Profile.SexPersonality"
                                             CssIcon="@IconsFA.Solid.Icon("heart").Font" HelpLink="https://vmtherapy.com/sex-personality-type">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.SexPersonalityPreference)" TValue="HashSet<SexPersonality>" TEnum="SexPersonality" @bind-SelectedValues="@Profile.SexPersonalityPreference"
                                             CssIcon="@IconsFA.Solid.Icon("heart-circle-check").Font" Multiple="true">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.INTEREST)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.INTEREST))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Interest</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.INTEREST)
                {
                    <MudAlert Dense="true" Variant="Variant.Outlined" Severity="MudBlazor.Severity.Info" Class="mb-4">
                        @CardHeader.Maximum3Items
                    </MudAlert>
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.Food)" TValue="HashSet<Food>" TEnum="Food" @bind-SelectedValues="@Profile!.Food"
                                             CssIcon="@IconsFA.Solid.Icon("pizza-slice").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Vacation)" TValue="HashSet<Vacation>" TEnum="Vacation" @bind-SelectedValues="@Profile.Vacation"
                                             CssIcon="@IconsFA.Solid.Icon("plane-departure").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.Sports)" TValue="HashSet<Sports>" TEnum="Sports" @bind-SelectedValues="@Profile.Sports"
                                             CssIcon="@IconsFA.Solid.Icon("person-swimming").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.LeisureActivities)" TValue="HashSet<LeisureActivities>" TEnum="LeisureActivities" @bind-SelectedValues="@Profile.LeisureActivities"
                                             CssIcon="@IconsFA.Solid.Icon("umbrella-beach").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.MusicGenre)" TValue="HashSet<MusicGenre>" TEnum="MusicGenre" @bind-SelectedValues="@Profile!.MusicGenre"
                                             CssIcon="@IconsFA.Solid.Icon("music").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.MovieGenre)" TValue="HashSet<MovieGenre>" TEnum="MovieGenre" @bind-SelectedValues="@Profile.MovieGenre"
                                             CssIcon="@IconsFA.Solid.Icon("film").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.TVGenre)" TValue="HashSet<TVGenre>" TEnum="TVGenre" @bind-SelectedValues="@Profile.TVGenre"
                                             CssIcon="@IconsFA.Solid.Icon("tv").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile.ReadingGenre)" TValue="HashSet<ReadingGenre>" TEnum="ReadingGenre" @bind-SelectedValues="@Profile.ReadingGenre"
                                             CssIcon="@IconsFA.Solid.Icon("book-open-reader").Font" Multiple="true" Order="o => o.Name">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.RELATIONSHIP)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.RELATIONSHIP))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Relationship</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.RELATIONSHIP)
                {
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.SharedFinances)" TValue="SharedFinances?" TEnum="SharedFinances" @bind-SelectedValue="@Profile!.SharedFinances"
                                             CssIcon="@IconsFA.Solid.Icon("money-bill-transfer").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.ConflictResolutionStyle)" TValue="ConflictResolutionStyle?" TEnum="ConflictResolutionStyle" @bind-SelectedValue="@Profile!.ConflictResolutionStyle"
                                             CssIcon="@IconsFA.Solid.Icon("handshake").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.HouseholdManagement)" TValue="HouseholdManagement?" TEnum="HouseholdManagement" @bind-SelectedValue="@Profile!.HouseholdManagement"
                                             CssIcon="@IconsFA.Solid.Icon("broom").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.TimeTogetherPreference)" TValue="TimeTogetherPreference?" TEnum="TimeTogetherPreference" @bind-SelectedValue="@Profile!.TimeTogetherPreference"
                                             CssIcon="@IconsFA.Solid.Icon("hand-holding-hand").Font">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.OppositeSexFriendships)" TValue="OppositeSexFriendships?" TEnum="OppositeSexFriendships" @bind-SelectedValue="@Profile!.OppositeSexFriendships"
                                             CssIcon="@IconsFA.Solid.Icon("people-arrows").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel ExpandedChanged="(bool value) => VisibleChanged(value, Tabs.GOAL)" HeaderClass="mud-primary-text">
            <TitleContent>
                <div class="d-flex">
                    @if (IsValid(Tabs.GOAL))
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" class="me-3"></MudIcon>
                    }
                    else
                    {
                        <MudIcon Icon="@IconsFA.Solid.Icon("triangle-exclamation").Font" Color="Color.Warning" class="me-3"></MudIcon>
                    }
                    <MudText Color="Color.Primary" Typo="Typo.button">@Section.Goals</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                @if (Tab == Tabs.GOAL)
                {
                    <MudStack Row="true" Spacing="4" Breakpoint="Breakpoint.Xs">
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.RelationshipIntentions)" TValue="HashSet<RelationshipIntention>" TEnum="RelationshipIntention" @bind-SelectedValues="@Profile!.RelationshipIntentions"
                                             CssIcon="@IconsFA.Solid.Icon("magnifying-glass").Font" Multiple="true">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.Relocation)" TValue="Relocation?" TEnum="Relocation" @bind-SelectedValue="@Profile!.Relocation"
                                             CssIcon="@IconsFA.Solid.Icon("truck").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                        <MudGrid>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.WantChildren)" TValue="WantChildren?" TEnum="WantChildren" @bind-SelectedValue="@Profile!.WantChildren"
                                             CssIcon="@IconsFA.Solid.Icon("baby").Font" ShowHelper="false">
                                </FieldSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <FieldSelect For="@(() => Profile!.IdealPlaceToLive)" TValue="IdealPlaceToLive?" TEnum="IdealPlaceToLive" @bind-SelectedValue="@Profile!.IdealPlaceToLive"
                                             CssIcon="@IconsFA.Solid.Icon("house-circle-check").Font">
                                </FieldSelect>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>
</RenderControl>

<MudButton StartIcon="@Icons.Material.Filled.Save" Color="Color.Primary" Variant="Variant.Filled" Class="me-2" OnClick="SaveHandle"
           Disabled="@(Profile == null || Principal == null || Principal.PublicProfile)" Size="AppStateStatic.Size">
    @Button.Save
</MudButton>

@if (Profile != null && !Validator.Validate(Profile, options => options.IncludeRuleSets(Tab.ToString())).IsValid)
{
    <MudButton StartIcon="@IconsFA.Solid.Icon("bug").Font" Color="Color.Warning" Variant="Variant.Filled" OnClick="() => ShowErrors(Profile)" Size="AppStateStatic.Size">
        @Button.ShowPendingItems
    </MudButton>
}

<MudDialog @ref="@MudDialog" Style="width: 100%">
    <DialogContent>
        <MudList T="string" Dense="true">
            <MudListItem Icon="@IconsFA.Solid.Icon("check").Font" Style="text-align: justify;">
                @GlobalTranslations.TermTopic1
            </MudListItem>
            <MudListItem Icon="@IconsFA.Solid.Icon("check").Font" Style="text-align: justify;">
                @GlobalTranslations.TermTopic2 <MudLink Href="@($"/support/privacy")" Target="_blank" Typo="Typo.body2">@GlobalTranslations.PrivacyPolicy</MudLink>;
            </MudListItem>
        </MudList>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(async () => { await MudDialog!.CloseAsync(); })" Size="AppStateStatic.Size">@Button.Close</MudButton>
    </DialogActions>
</MudDialog>

<FloatingButton StartIcon="@IconsFA.Solid.Icon("user-shield").Font" Color="Color.Info" Side="Side.Right" Position="2"
                OnClick="async () => await MudDialog!.ShowAsync(GlobalTranslations.Privacy, PopupHelper.Options(MaxWidth.ExtraSmall))">
</FloatingButton>
<FloatingButton Template="Template.Back"></FloatingButton>

@code {
    private MudDialog? MudDialog { get; set; }

    private Tabs? Tab { get; set; }

    private enum Tabs
    {
        BASIC,
        BIO,
        LIFESTYLE,
        PERSONALITY,
        INTEREST,
        RELATIONSHIP,
        GOAL
    }

    bool _BioExpanded = false;

    private void VisibleChanged(bool value, Tabs? tab)
    {
        if (value)
            Tab = tab;
        else if (Tab == tab)
            Tab = null;
    }

    private void CountryChanged(Country? country)
    {
        if (Profile == null) return;

        Profile.Nationality = country;
        Profile.AddLanguages(country);
    }

    public ProfileValidation Validator { get; set; } = new();

    private bool IsValid(Tabs tab)
    {
        if (Profile == null) return false;

        var result = new FluentValidation.Results.ValidationResult();

        switch (tab)
        {
            case Tabs.BASIC:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("BASIC"));
                break;
            case Tabs.BIO:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("BIO"));
                break;
            case Tabs.LIFESTYLE:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("LIFESTYLE"));
                break;
            case Tabs.PERSONALITY:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("PERSONALITY"));
                break;
            case Tabs.INTEREST:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("INTEREST"));
                break;
            case Tabs.RELATIONSHIP:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("RELATIONSHIP"));
                break;
            case Tabs.GOAL:
                result = Validator.Validate(Profile, options => options.IncludeRuleSets("GOAL"));
                break;
        }

        return result.IsValid;
    }

}