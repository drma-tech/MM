@using MM.Shared.Models.Auth
@using Button = MM.WEB.Resources.Button
@using CardHeader = MM.WEB.Resources.CardHeader
@inherits ComponentCore<InvitePerEmail>

<MudDialog Style="width: 100%">
    <DialogContent>
        <MudAlert Variant="Variant.Outlined" Severity="Severity.Warning" Dense="true" Class="mb-2">
            <span style="font-weight: bold;" class="me-2">@GlobalTranslations.InviteYyourPartnerTitle1</span>@GlobalTranslations.InviteYyourPartnerTitle2
        </MudAlert>
        <FieldText For="() => Email" @bind-Value="@Email" CssIcon="@IconsFA.Solid.Icon("at").Font" Required="true" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(() => { MudDialog!.Close(); })">@Button.Close</MudButton>
        <MudButton Color="Color.Primary" OnClick="@SaveHandle">@Button.Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }

    [Parameter] public AuthPrincipal? principal { get; set; }
    [Parameter] public EventCallback<string> InviteSent { get; set; }

    [Custom(Name = "PartnerEmail", ResourceType = typeof(GlobalTranslations))]
    private string? Email { get; set; }

    private async Task SaveHandle()
    {
        if (Email.Empty())
        {
            Snackbar.Add(GlobalTranslations.EmailRequired, Severity.Warning);
            return;
        }

        if (Email == principal!.Email)
        {
            Snackbar.Add(GlobalTranslations.EnterPartnerEmail, Severity.Warning);
            return;
        }

        MudDialog?.Close();
        await InviteSent.InvokeAsync(Email);
    }

}