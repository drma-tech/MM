@using Button = MM.WEB.Resources.Button
@inherits ComponentCore<ProfileReport>

<MudDialog @ref="@modal" Style="width: 100%">
    <DialogContent>
       @*  <RadioGroup TValue="int" Name="report" CheckedValue="@checkedValue" CheckedValueChanged="@OnCheckedValueChanged">
            @{
                var previousGroup = "";
                @foreach (var item in EnumHelper.GetList<ReportType>())
                {
                    if (!string.IsNullOrEmpty(item.Group) && previousGroup != item.Group)
                    {
                        <Alert Visible="true" Color="Color.Info">
                            <AlertMessage>@item.Group.Split("|")[0]</AlertMessage>
                            <AlertDescription>@item.Group.Split("|")[1]</AlertDescription>
                        </Alert>
                    }

                    <Paragraph TextAlignment="TextAlignment.Justified" Margin="Margin.Is2.FromBottom">
                        <Radio Size="Size.Medium" Value="@item.Value">@item.Name</Radio>
                        <FieldHelp Style="display: inline;">@item.Description</FieldHelp>
                    </Paragraph>
                    previousGroup = item?.Group ?? "";
                }
            }
        </RadioGroup> *@
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(async () => { await modal!.CloseAsync(); })" Size="AppStateStatic.Size">@Button.Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="@Confirmar" Disabled="true" Size="AppStateStatic.Size">@Button.Confirm</MudButton>
    </DialogActions>
</MudDialog>

@code {

    private MudDialog? modal;
    private int checkedValue = 1;

    public void ShowModal()
    {
        modal?.ShowAsync("Report Profile");
    }

    void OnCheckedValueChanged(int value)
    {
        checkedValue = value;
    }

    private void Confirmar()
    {
        //report

        //delete match

        modal?.CloseAsync();
    }

}