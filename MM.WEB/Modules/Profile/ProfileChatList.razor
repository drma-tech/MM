@page "/ProfileChatList"
@attribute [Authorize]
@inherits PageCore<ProfileChatList>

<div class="ibox">
    <div class="ibox-title" style="padding-right: 15px;">
        <h5>Novos Matches</h5>
    </div>
    <div class="ibox-content" style="padding: 15px;">

        @if (OptionsMatch.HasCustomVisibility)
        {
            <CustomVisibility Options="OptionsMatch"></CustomVisibility>
        }
        else
        {
            <div class="row">
                @foreach (var item in NewMatches)
                {
                    <div class="col-lg-1 col-md-2 col-3 text-center">
                        <a @onclick="() => GoChatAndGenerate(item.Id)" class="embed-responsive embed-responsive-1by1 img-fluid img-circle divPhoto">
                            <img alt="..." class="imgPhoto" style="object-fit: cover;" src="@item.GetMainPhoto()" />
                        </a>
                        <small>@item.NickName</small>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div class="ibox">
    <div class="ibox-title" style="padding-right: 15px;">
        <h5>Caixa de Mensagens</h5>
    </div>
    <div class="ibox-content">
        @*<div class="input-group">
                <input type="text" placeholder="Search client " class="input form-control">
                <span class="input-group-append">
                    <button type="button" class="btn btn btn-primary"> <i class="fa fa-search"></i> Search</button>
                </span>
            </div>*@
        <div class="clients-list" style="overflow: auto; height: 300px; margin-top: 0;">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Nome</th>
                            <th>Msg Não Lidas</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (OptionsChat.HasCustomVisibility)
                        {
                            <CustomVisibility Options="OptionsChat"></CustomVisibility>
                        }
                        else
                        {

                            @foreach (var item in ChatList)
                            {
                                <tr>
                                    <td class="client-avatar embed-responsive embed-responsive-1by1 divPhoto">
                                        <img alt="..." class="imgPhoto" style="object-fit: cover;" src="@item.GetMainPhoto()" />
                                    </td>
                                    <td><a @onclick="() => GoChat(item.Id)" class="client-link">@item.NickName</a></td>
                                    <td>@item.QtdUnread @if (item.QtdUnread > 0) { <span class="label label-warning">Sua vez</span> }</td>
                                    @*<td class="client-status"><ActivityStatus EnumActivityStatus="@item.ActivityStatus"></ActivityStatus></td>*@
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code
{
    private List<ProfileSearch> NewMatches { get; set; }
    private List<ProfileChatListModel> ChatList { get; set; }

    private VisibilityOptions OptionsMatch => new VisibilityOptions()
    {
        Loading = NewMatches == null,
        NoData = NewMatches != null && !NewMatches.Any()
    };

    private VisibilityOptions OptionsChat => new VisibilityOptions()
    {
        Loading = ChatList == null,
        NoData = ChatList != null && !ChatList.Any()
    };

    protected override async Task LoadDataRender()
    {
        //NewMatches = await Http.Interation_GetNewMatches();
        //ChatList = await Http.Interation_GetChatList();
    }

    private async Task GoChatAndGenerate(string IdUserView)
    {
        await Http.Interation_GenerateChat(ComponenteUtils.IdUser, IdUserView);
        GoChat(IdUserView);
    }

    private void GoChat(string IdUserView)
    {
        Navigation.NavigateTo($"ProfileChat/{IdUserView}");
    }
}