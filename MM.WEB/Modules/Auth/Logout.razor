@page "/logout"

@inject IJSRuntime JsRuntime

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync(@"
            localStorage.clear();
            sessionStorage.clear();

            document.cookie.split(';').forEach(c => {
                const [name] = c.trim().split('=');
                document.cookie = `${name}=; path=/; domain=${window.location.hostname}; expires=Thu, 01 Jan 1970 00:00:00 GMT`;
            });

            window.location.href = '/?logout=' + new Date().getTime();
        ");

        _ = BackgroundLogout();
    }

    private async Task BackgroundLogout()
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("fetch('/.auth/logout', {method: 'POST'})");
        }
        catch
        {
            //do nothing
        }
    }
}
