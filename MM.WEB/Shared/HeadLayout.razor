@inherits ComponentCore<HeadLayout>

<Bar Mode="BarMode.Horizontal" Background="Background.Secondary" ThemeContrast="ThemeContrast.Dark" Padding="Padding.Is2">
    <Container Fluid="true" Padding="Padding.Is0.OnX">
        <MediaQuery Media="@Breakpoints.LargeUp">
            <Matched>
                <BarToggler Bar="@AppStateStatic.Sidebar" Background="Background.Dark" Margin="Margin.Is2.FromEnd" Padding="Padding.Is0" Style="height: 31px; width: 31px;" />
            </Matched>
        </MediaQuery>
        <BarMenu Style="flex-basis: unset !important;">
            <AuthorizeView>
                <Authorized>
                    <Button Color="Color.Danger" Clicked="Logout" title="Logout" Float="Float.End" Size="Size.Small">
                        <Blazorise.Icon Name="FontAwesomeIcons.SignOutAlt" /> @WEB.Resources.Button.Logout
                    </Button>
                </Authorized>
                <NotAuthorized>
                    <Button Color="Color.Primary" Type="ButtonType.Link" To="/login-providers" title="Login" Float="Float.End" Size="Size.Small">
                        <Blazorise.Icon Name="FontAwesomeIcons.SignInAlt" /> @WEB.Resources.Button.Login
                    </Button>
                </NotAuthorized>
            </AuthorizeView>
            <Button Color="Color.Dark" Float="Float.End" Size="Size.Small" Margin="Margin.Is2.FromEnd" Clicked="OpenConfigurations">
                <Blazorise.Icon Name="FontAwesomeIcons.Globe" />
            </Button>
        </BarMenu>
    </Container>
</Bar>

@code {
    private void Logout()
    {
        Navigation.NavigateTo("/.auth/logout", forceLoad: true);
    }

    private async Task OpenConfigurations()
    {
        await ModalService.SettingsPopup();
    }
}