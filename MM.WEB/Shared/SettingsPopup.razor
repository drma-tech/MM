@using MM.WEB.Modules.Profile
@inherits ComponentCore<SettingsPopup>

@inject IJSRuntime JsRuntime
<ModalHeader>
    <ModalTitle Size="HeadingSize.Is5">@GlobalTranslations.Settings</ModalTitle>
    <CloseButton />
</ModalHeader>
<ModalBody MaxHeight="70">
    <FieldSelect For="@(() => AppStateStatic.Language)" TValue="Language" TEnum="Language" SelectedValue="@AppStateStatic.Language" SelectedValueChanged="LanguageValueChanged"
                 CssIcon="@FontAwesomeIcons.Language" Order="(o)=>o.Name" ShowHelper="false"></FieldSelect>
</ModalBody>
<ModalFooter>
    <Button Color="Color.Secondary" Clicked="@(()=>{ModalService.Hide();})" Size="Size.Small">
        @WEB.Resources.Button.Close
    </Button>
</ModalFooter>

@code {
    protected override async Task LoadDataRender()
    {
        var language = await JsRuntime.InvokeAsync<string>("GetLocalStorage", "language");

        if (language.NotEmpty())
        {
            AppStateStatic.ChangeLanguage((Language)Enum.Parse(typeof(Language), language.Replace("-", "")));
        }
    }

    protected async Task LanguageValueChanged(Language value)
    {
        await JsRuntime.InvokeAsync<string>("SetLocalStorage", "language", value.GetName(false));
        Navigation.NavigateTo(Navigation.GetUriWithQueryParameter("language", value.GetCustomAttribute(false)?.Tips), forceLoad: true);
    }
}
