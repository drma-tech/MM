@typeparam T

<Button Color="Color" Clicked="Clicked" Block="Block" Margin="Margin" Disabled="(Disabled || Processing)">
    <ChildContent>
        @ChildContent
    </ChildContent>
</Button>

@code {
    [Parameter] public Color? Color { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Clicked { get; set; }
    [Parameter] public bool Block { get; set; }
    [Parameter] public IFluentSpacing? Margin { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public RenderControlCore<T?>? Core { get; set; }

    private bool Processing = false;

    protected override void OnInitialized()
    {
        if (Core != null) Core.ProcessingStarted += () => Processing = true;
        if (Core != null) Core.ProcessingFinished += (T? obj) => Processing = false;
    }
}
